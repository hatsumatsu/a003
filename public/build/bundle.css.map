{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Dot.svelte",
    "../../Synth.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Utils from './utils.js';\n\timport { onMount } from 'svelte';\n\timport Dot from './Dot.svelte';\n\timport Synth from './Synth.svelte';\n\n\tlet settings = {\n\t\tdamping: 4,\n\t\tmaxAngle: 60\n\t}\n\n\tlet mode = 'mouse';\n\n\t//\n\t// -1 ... 1\n\t// \n\tlet xInput = 0;  \n\tlet yInput = 0;\n\n\tlet xDelta = 0;\n\tlet yDelta = 0;\n\t\n\tlet x = 0;\n\tlet y = 0;\n\n\n\n\tfunction onMousemove( event ) {\n\t\tif( mode !== 'mouse' ) {\n\t\t\treturn;\n\t\t}\n\n\t\txInput = ( event.clientX / window.innerWidth - 0.5 ) * 2;\n\t\tyInput = ( event.clientY / window.innerHeight - 0.5 ) * 2;\n\t}\n\n\n\n\tfunction onDeviceOrientation( event ) {\n\t\tmode = 'orientation';\n\n        let orientation = typeof window.orientation !== 'undefined' ? window.orientation : 0;\n\n        if( orientation === 0 ) {\n            xInput = Utils.clamp( event.gamma, -1 * settings.maxAngle, settings.maxAngle ) / settings.maxAngle;\n            yInput = Utils.clamp( event.beta, -1 * settings.maxAngle, settings.maxAngle ) / settings.maxAngle;\n        } else if ( orientation === 180 ) {\n            xInput = Utils.clamp( event.gamma, -1 * settings.maxAngle, settings.maxAngle ) / settings.maxAngle;\n            yInput = Utils.clamp( -event.beta, -1 * settings.maxAngle, settings.maxAngle ) / settings.maxAngle;\n        } else if ( orientation === 90 ) {\n            xInput = Utils.clamp( event.beta, -1 * settings.maxAngle, settings.maxAngle ) / settings.maxAngle;\n            yInput = Utils.clamp( -event.gamma, -1 * settings.maxAngle, settings.maxAngle ) / settings.maxAngle;\n        } else if ( orientation === -90 ) {\n            xInput = Utils.clamp( -event.beta, -1 * settings.maxAngle, settings.maxAngle ) / settings.maxAngle;\n            yInput = Utils.clamp( event.gamma, -1 * settings.maxAngle, settings.maxAngle ) / settings.maxAngle;\n        }\n    }\n\n\tonMount(() => {\n\t\tlet frame;\t\n\n\t\t( function onLoop() {\n\t\t \tframe = requestAnimationFrame( onLoop );\t\n\n\n\t\t    xDelta = xInput - x;\n\t\t    yDelta = yInput - y;\n\n\t    \tx = x + ( xDelta / settings.damping );\n\t    \ty = y + ( yDelta / settings.damping );\n\t    } )();\n\n\t    // onUnmount\n\t\treturn () => {\n\t\t\tcancelAnimationFrame( frame );\n\t\t};\t    \n\t} );\n\n\t\n</script>\n\n\n\n<svelte:window \n\ton:mousemove={onMousemove}\n\ton:deviceorientation={onDeviceOrientation} />\n\n<svelte:head>\n\t<title>A003</title>\n</svelte:head>\n\n\n\n<p>\n\t{x} / {y}\n</p>\n\n\n<Dot \n\tbind:x={x}\n\tbind:y={y}\n/>\n\n<Synth \n\tbind:x={x}\n\tbind:y={y}\n/>\n\n\n<style>\n\t:global( html ),\n\t:global( body ) {\n\t\tmargin: 0;\n\t\toverflow: hidden;\n\n\t\tcolor: #fff;\n\n\t\tbackground-color: #000;\n\t}\n\n\t:global( body ) {\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\tright: 0;\n\t\ttop: 0;\n\t\tbottom: -1px;\n\t}\t\t\n</style>",
    "<script>\n\timport Utils from './utils.js';\n\n\texport let x;\n\texport let y;\n\n\tlet size = 48;\n\n\t$: xAbsolute = Utils.clamp( ( ( x + 1 ) / 2 * window.innerWidth ), ( size / 2 ), ( window.innerWidth - size / 2 ) );\n\t$: yAbsolute = Utils.clamp( ( ( y + 1 ) / 2 * window.innerHeight ), ( size / 2 ), ( window.innerHeight - size / 2 ) );\n</script>\n\n\n<span \n\tclass=\"dot\"\n\tstyle=\"\n\t\twidth: {size}px;\n\t\theight: {size}px;\n\t\ttransform:translate( {(xAbsolute - size / 2)}px, {(yAbsolute - size / 2)}px );\"\n\t\t>\n\n</span>\n\n\n<style>\n\t.dot {\n\t\tposition: fixed;\n\t\tleft: 0;\n\t\ttop: 0;\n\n\t\tbox-sizing: border-box;\n\t\tdisplay: block;\n\n\t\tborder: 2px solid #d0ff00;\n\t\tborder-radius: 50%;\n\t}\n</style>",
    "<script>\n\timport { onMount } from 'svelte';\n\n\texport let x;\n\texport let y;\n\n\n\tconst settings = {\n\t\tbaseNote: 261.6256,\n\t\tnoteRange: 100\n\t}\n\n\n\tlet synth;\n\n\n\tfunction onClick() {\n\t\tTone.start();\t\n\t}\n\n\tonMount(() => {\n\t\tlet interval;\n\n\t\tsynth = new Tone.Synth().toMaster();\n\n\t\tconsole.log( synth );\n\n\t\tsynth.triggerAttack( 261 );\n\n\n\t\tinterval = setInterval( () => {\n\t\t\tsynth.frequency.rampTo( settings.baseNote + ( y * settings.noteRange ), 0.5 );\n\t\t}, 400 );\n\n\n\t    // onUnmount\n\t\treturn () => {\n\t\t\tsynth.triggerRelease();\n\t\t\tclearInterval( interval );\n\t\t};\t    \t\t\n\t} );\n\n</script>\n\n\n\n<style>\n\t.start {\n\t\tposition: fixed;\n\t\tleft: 0;\n\t\tbottom: 0;\n\t\tz-index: 1000;\n\n\t\tmargin: 1rem;\n\t}\n</style>\n\n\n<button\n\ton:click={onClick}\n\tclass=\"start\"\n\t>Start</button>\n"
  ],
  "names": [],
  "mappings": "AA8GS,MAAM,AAAC,CACP,MAAM,AAAE,CAAC,AAChB,MAAM,CAAE,CAAC,CACT,QAAQ,CAAE,MAAM,CAEhB,KAAK,CAAE,IAAI,CAEX,gBAAgB,CAAE,IAAI,AACvB,CAAC,AAEO,MAAM,AAAE,CAAC,AAChB,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,GAAG,CAAE,CAAC,CACN,MAAM,CAAE,IAAI,AACb,CAAC;ACrGD,IAAI,eAAC,CAAC,AACL,QAAQ,CAAE,KAAK,CACf,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CAEN,UAAU,CAAE,UAAU,CACtB,OAAO,CAAE,KAAK,CAEd,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,GAAG,AACnB,CAAC;ACYD,MAAM,cAAC,CAAC,AACP,QAAQ,CAAE,KAAK,CACf,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,IAAI,CAEb,MAAM,CAAE,IAAI,AACb,CAAC"
}